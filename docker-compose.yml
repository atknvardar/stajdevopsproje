version: '3.8'

services:
  # Main application
  microservice:
    build:
      context: .
      dockerfile: build/Dockerfile
      target: runtime
      args:
        BUILD_DATE: "2024-01-01T00:00:00Z"
        VERSION: "1.0.0-dev"
        COMMIT_HASH: "dev"
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - LOG_LEVEL=DEBUG
      - ENVIRONMENT=development
      - METRICS_ENABLED=true
      - TRACING_ENABLED=true
      - JAEGER_ENDPOINT=jaeger
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - jaeger
    networks:
      - microservice-net

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:1.51
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # HTTP collector
      - "6831:6831/udp"  # UDP collector
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - microservice-net

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:v2.47.2
    ports:
      - "9090:9090"
    volumes:
      - ./build/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - microservice-net
    depends_on:
      - microservice

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.2.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./build/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    networks:
      - microservice-net
    depends_on:
      - prometheus

volumes:
  grafana-storage:

networks:
  microservice-net:
    driver: bridge 